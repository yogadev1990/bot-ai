const { checkContact, saveContact, removeContact } = require("../lib/helpers");
const ResponFormatter = require("../lib/responFormatter");
const Iklan = require("./IklanChizu");
const GeminiAi = require("./geminiAi");
const OpenAiLocal = require("./openAi");
const StickerWa = require("./stickerWa");

class MessageHandler {
  async process(req, res) {
    const { message, bufferImage, from, participant } = req.body;
    const isRegistered = await checkContact(from);

    const responFormatter = new ResponFormatter();
    const iklan = new Iklan();
    
    if (message.includes("revandastore")) {
      res.send(
        responFormatter.line(iklan.getIklan()).responAsText()
      );
    }

    if (message === "/start") {
      if (!isRegistered) await saveContact(from);
      const msg = responFormatter
        .line("Bot active, happy to use it!")
        .responAsText();
      return res.send(msg);
    }

    if (message === "/stop") {
      if (isRegistered) await removeContact(from);
      res.send(
        responFormatter.line("Bot inactive, see you later!").responAsText()
      );
    }

    if (!isRegistered) return;

    if (message == "/chizu"){
      res.send(
        responFormatter.line(`*Chizuru-chanüå∏*
	
„Å©„ÅÜ„ÇÇ „ÅÇ„Çä„Åå„Å®„ÅÜ „Åî„Åñ„ÅÑ„Åæ„Åô ~~
Iya tau, chizu cantik, makasih kak @${participant}<3
ketik *menu* untuk membuka list command yaa`).responAsText()
      );
    }
    if (message == "/menu"){
      res.send(
        responFormatter.line(`*Chizuru-chanüå∏*
		
Baik kak, ada yang bisa chizu bantu?

‚ïî‚ïê‚ïê„Äò *TORAM MENU* „Äô‚ïê‚ïê
‚ï†‚û• lvling char *miniboss/boss* [lvl]
‚ï†‚û• lvling bs *tec/non*
‚ï†‚û• lvling alche
‚ï†‚û• cari item [item]
‚ï†‚û• cari monster [monster]
‚ï†‚û• racik rumus fill 
‚ï†‚û• cari registlet [regist] 
‚ï†‚û• harga slot [eq]
‚ï†‚û• bahan tas
‚ï†‚û• bahan mq
‚ï†‚û• kode live
‚ï†‚û• info farm mats
‚ï†‚û• info dye
‚ï†‚û• info ailment 
‚ï†‚û• ninja scroll
‚ï†‚û• kalkulator quest
‚ï†‚û• buff food
‚ï†‚û• kamus besar toram
‚ï†‚û• pet lvling
‚ï†‚û• arrow elemental
‚ï†‚û• build toram
‚ï†‚û• mt terbaru
‚ïë
‚ï†‚ïê‚ïê„Äò *GENERAL MENU* „Äô‚ïê‚ïê
‚ï†‚û• cari anime [anime]
‚ï†‚û• cari manga [manga]
‚ï†‚û• anime *top/random/recommendations*
‚ï†‚û• manga *top/random/recommendations*
‚ï†‚û• on going anime
‚ï†‚û• random anime quotes
‚ï†‚û• AI chat [pesan]
‚ï†‚û• tiktok dl [link]
‚ï†‚û• fb dl [link]
‚ï†‚û• ig dl [link]
‚ï†‚û• stikerin (reply foto)
‚ï†‚û• req fitur [pesan]
‚ï†‚û• info bot
‚ï†‚û• help
‚ïë
‚ï†‚ïê‚ïê„Äò *ADMIN MENU* „Äô‚ïê‚ïê
‚ï†‚û• add [@628xx]
‚ï†‚û• kick [@tag member]
‚ï†‚û• promote [@tag member]
‚ï†‚û• demote [@tag member]
‚ï†‚û• anti toxic *on/off*
‚ï†‚û• anti link *on/off*
‚ï†‚û• welcome msg *on/off*
‚ï†‚û• out msg *on/off*
‚ï†‚û• grup status
‚ïë
‚ï†‚ïê„Äò *ANTI VIRTEX ON* „Äô‚ïê`).responAsText()
      );
    }
    //handle sticker command
    if (message === "/sticker") {
      if (!bufferImage) {
        return res.send(
          responFormatter
            .line("Please send image if using command /sticker")
            .responAsText()
        );
      }

      return res.send(
        responFormatter.responSticker(await StickerWa.create(bufferImage))
      );
    }

    // try {
    //   let response;
    //   if (process.env.BOT_ACTIVE === "openai") {
    //     response = await OpenAiLocal.run(from, message);
    //   } else if (process.env.BOT_ACTIVE === "geminiai") {
    //     response = await GeminiAi.run(from, message);
    //   } else {
    //     throw new Error("Invalid BOT_ACTIVE value");
    //   }

    //   return res.send(responFormatter.line(response).responAsText());
    // } catch (error) {
    //   console.log("something went wrong in gemini ai", error);
    // }
  }
}

module.exports = MessageHandler;
