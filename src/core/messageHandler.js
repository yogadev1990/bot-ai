const {
  checkDelay,
  saveDelayed,
  checkSubscription,
} = require("../lib/helpers");
const ResponFormatter = require("../lib/responFormatter");
const Iklan = require("./IklanChizu");
const GeminiAi = require("./geminiAi");
const OpenAiLocal = require("./openAi");
const StickerWa = require("./stickerWa");

class MessageHandler {
  async process(req, res) {
    console.log("incoming message", req.body);
    const { message, bufferImage, from, participant } = req.body;
    const isSubscribed = await checkSubscription(from);

    const responFormatter = new ResponFormatter();
    const iklan = new Iklan();

    if ('participant' in req.body && !isSubscribed) {
      const canSendAd = checkDelay(from);

      if (canSendAd) {
        res.send(responFormatter.line(iklan.getIklan()).responAsText());
        saveDelayed(from);
      } else {}
    }

    if (message === "/grupid") {
      res.send(responFormatter.line(`ID Grup ini adalah ${from}
Untuk mengaktifkan bot, silakan baca panduan https://revandastore.com/katalog/11`).responAsText()
      );
    }
    if (isSubscribed) {
      if (message === "/chizu") {
        res.send(
          responFormatter.line(`*Chizuru-chanüå∏*
	
„Å©„ÅÜ„ÇÇ „ÅÇ„Çä„Åå„Å®„ÅÜ „Åî„Åñ„ÅÑ„Åæ„Åô ~~
Iya tau, chizu cantik, makasih kak<3
ketik *menu* untuk membuka list command yaa.`).responAsText());
      } 
      
      if (message === "/menu") {
        res.send(
          responFormatter
          .line(`*Chizuru-chanüå∏*
Iyaa kak, ada yang bisa chizu bantu?

‚ïî‚ïê‚ïê„Äò *TORAM MENU* „Äô‚ïê‚ïê
‚ï† /lvling char *miniboss/boss* [lvl]
‚ï† /lvling bs *tec/non*
‚ï† /lvling alche
‚ï† /cari item [item]
‚ï† /cari monster [monster]
‚ï† /racik rumus fill 
‚ï† /cari registlet [regist] 
‚ï† /harga slot [eq]
‚ï† /bahan tas
‚ï† /bahan mq
‚ï† /kode live
‚ï† /info farm mats
‚ï† /info dye
‚ï† /info ailment 
‚ï† /ninja scroll
‚ï† /kalkulator quest
‚ï† /buff food
‚ï† /kamus besar toram
‚ï† /pet lvling
‚ï† /arrow elemental
‚ï† /build toram
‚ï† /mt terbaru
‚ïë
‚ï†‚ïê‚ïê„Äò *GENERAL MENU* „Äô‚ïê‚ïê
‚ï† /cari anime [anime]
‚ï† /cari manga [manga]
‚ï† /anime *top/random/recommendations*
‚ï† /manga *top/random/recommendations*
‚ï† /on going anime
‚ï† /random anime quotes
‚ï† /AI chat [pesan]
‚ï† /tiktok dl [link]
‚ï† /fb dl [link]
‚ï† /ig dl [link]
‚ï† /stikerin (reply foto)
‚ï† /req fitur [pesan]
‚ï† /info bot
‚ï† /help
‚ïë
‚ï†‚ïê‚ïê„Äò *ADMIN MENU* „Äô‚ïê‚ïê
‚ï† /add [@628xx]
‚ï† /kick [@tag member]
‚ï† /promote [@tag member]
‚ï† /demote [@tag member]
‚ï† /anti toxic *on/off*
‚ï† /anti link *on/off*
‚ï† /welcome msg *on/off*
‚ï† /out msg *on/off*
‚ï† /grup status
‚ïë
‚ïö‚ïê„Äò *ANTI VIRTEX ON* „Äô‚ïê`).responAsText());
      }

    if (message === "/sticker") {
      if (!bufferImage) {
        return res.send(
          responFormatter
          .line("Please send image if using command /sticker")
          .responAsText()
        );
      }

      return res.send(
        responFormatter.responSticker(await StickerWa.create(bufferImage))
      );
    }
    
  }
    if (!isSubscribed) return;

    // try {
    //   let response;
    //   if (process.env.BOT_ACTIVE === "openai") {
    //     response = await OpenAiLocal.run(from, message);
    //   } else if (process.env.BOT_ACTIVE === "geminiai") {
    //     response = await GeminiAi.run(from, message);
    //   } else {
    //     throw new Error("Invalid BOT_ACTIVE value");
    //   }

    //   return res.send(responFormatter.line(response).responAsText());
    // } catch (error) {
    //   console.log("something went wrong in gemini ai", error);
    // }
  }
}

module.exports = MessageHandler;